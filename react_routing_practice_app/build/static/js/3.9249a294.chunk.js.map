{"version":3,"sources":["components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","quoteId","commentData","current","value","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","commentsSection","useState","isAddingComment","setIsAddingComment","getAllComments","data","useParams","addCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuotePage","params","match","useRouteMatch","getSingleQuote","path","exact","to","url"],"mappings":"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","file":"static/js/3.9249a294.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2-RET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24B60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2cIaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2s5eh\",\"loading\":\"NewCommentForm_loading__2ykOg\",\"control\":\"NewCommentForm_control__lZrhc\",\"actions\":\"NewCommentForm_actions__1XiBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__aWPLs\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment, false);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({\n      quoteId: props.quoteId,\n      commentData: {text: commentTextRef.current.value},\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest,\n    data: comments,\n    status,\n  } = useHttp(getAllComments, true);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  },[sendRequest, quoteId]);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let commentsSection;\n\n  if (status === \"pending\") {\n    commentsSection = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (comments && comments.length > 0)) {\n    commentsSection = <CommentsList comments={comments} />\n  }\n\n  \n  if (status === \"completed\" && (!comments || comments.length === 0)) {\n    commentsSection = <p className=\"centered\">Such empty...</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onAddedComment={addCommentHandler} quoteId={quoteId} />\n      )}\n      {commentsSection}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuotePage = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const { sendRequest, data: quote, status } = useHttp(getSingleQuote, true);\r\n  \r\n  useEffect(() => {\r\n    sendRequest(params.quoteId);\r\n  }, [sendRequest, params.quoteId]);\r\n\r\n  if(status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if(!quote) {\r\n    return <p className=\"centered\">No Quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote author={quote.author} text={quote.text} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Show Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n      <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={match.url}>\r\n            Hide Comments\r\n          </Link>\r\n        </div>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuotePage;\r\n"],"sourceRoot":""}